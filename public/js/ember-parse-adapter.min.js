var EmberParseAdapter={};EmberParseAdapter.Transforms={};EmberParseAdapter.Serializer=DS.RESTSerializer.extend({primaryKey:"objectId",extractArray:function(e,t,n){var r={};r[Ember.String.pluralize(t.typeKey)]=n.results;return this._super(e,t,r)},extractSingle:function(e,t,n,r){var i={};i[t.typeKey]=n;return this._super(e,t,i,r)},typeForRoot:function(e){return Ember.String.dasherize(Ember.String.singularize(e))},extract:function(e,t,n,r,i){if(r!==null&&(i==="updateRecord"||i==="deleteRecord")){n[this.get("primaryKey")]=r}return this._super(e,t,n,r,i)},extractMeta:function(e,t,n){if(n&&n.count){e.metaForType(t,{count:n.count});delete n.count}},normalizeAttributes:function(e,t){e.eachAttribute(function(e,n){if(n.type==="date"&&Ember.typeOf(t[e])==="object"&&t[e].iso){t[e]=t[e].iso}});this._super(e,t)},normalizeRelationships:function(e,t){var n=this.get("store");var r=this;e.eachRelationship(function(e,i){var s=i.options;if(t[e]&&i.kind==="belongsTo"){t[e]=t[e].objectId}if(t[e]&&i.kind==="hasMany"){if(s.relation){t.links={};t.links[e]={type:i.type,key:e}}if(s.array){if(t[e].length&&t[e]){t[e].forEach(function(e,t,s){if(e&&e.__type==="Pointer"){s[t]=e.objectId}else if(e){delete e.__type;delete e.className;e.id=e.objectId;delete e.objectId;e.type=i.type;r.normalizeAttributes(i.type,e);r.normalizeRelationships(i.type,e);n.push(i.type,e)}})}}}},this);this._super(e,t)},serializeIntoHash:function(e,t,n,r){Ember.merge(e,this.serialize(n,r))},serializeAttribute:function(e,t,n,r){if(n==="createdAt"||n==="updatedAt"||n==="emailVerified"||n==="sessionToken"){delete t[n]}else{this._super(e,t,n,r)}},serializeBelongsTo:function(e,t,n){var r=n.key;var i=e.get(r);if(i){if(i instanceof DS.PromiseObject){if(!i.get("isFulfilled")){return}i=i.get("content")}t[r]={__type:"Pointer",className:this.parseClassName(i.constructor.typeKey),objectId:i.get("id")}}},parseClassName:function(e){if(e==="parseUser"||e==="user"){return"_User"}else{return Ember.String.capitalize(Ember.String.camelize(e))}},serializeHasMany:function(e,t,n){var r=n.key;var i=e.get(r);var s=n.options;if(i&&i.get("length")>0){t[r]=[];if(s.relation){t[r].__op="AddRelation"}if(s.array){t[r].__op="AddUnique"}i.forEach(function(e){t[r].push({__type:"Pointer",className:e.parseClassName(),objectId:e.get("id")})});if(i._deletedItems&&i._deletedItems.length){if(s.relation){var o=t[r];var u={__op:"RemoveRelation",objects:[]};i._deletedItems.forEach(function(e){u.objects.push({__type:"Pointer",className:e.type,objectId:e.id})});t[r]={__op:"Batch",ops:[o,u]}}if(s.array){t[r].deleteds={__op:"Remove",objects:[]};i._deletedItems.forEach(function(e){t[r].deleteds.objects.push({__type:"Pointer",className:e.type,objectId:e.id})})}}}else{t[r]=[]}}});EmberParseAdapter.Adapter=DS.RESTAdapter.extend({defaultSerializer:"-parse",init:function(){this._super();this.set("headers",{"X-Parse-Application-Id":this.get("applicationId"),"X-Parse-REST-API-Key":this.get("restApiId")})},host:"https://api.parse.com",namespace:"1",classesPath:"classes",pathForType:function(e){if("parseUser"===e){return"users"}else if("login"===e){return"login"}else if("signup"===e){return"users"}else if("users/me"===e){return"users/me"}else{return this.classesPath+"/"+this.parsePathForType(e)}},parsePathForType:function(e){return Ember.String.capitalize(Ember.String.camelize(e))},createRecord:function(e,t,n){var r={};var i=e.serializerFor(t.typeKey);i.serializeIntoHash(r,t,n,{includeId:true});var s=this;return new Ember.RSVP.Promise(function(e,n){s.ajax(s.buildURL(t.typeKey),"POST",{data:r}).then(function(t){var n=Ember.merge(r,t);e(n)},function(e){n(e.responseJSON)})})},updateRecord:function(e,t,n){var r={};var i={};var s=false;var o=e.serializerFor(t.typeKey);o.serializeIntoHash(r,t,n);var u=n.get("id");var a=this;t.eachRelationship(function(e,t){if(r[e]&&r[e].deleteds){i[e]=r[e].deleteds;delete r[e].deleteds;s=true}});return new Ember.RSVP.Promise(function(e,n){if(s){a.ajax(a.buildURL(t.typeKey,u),"PUT",{data:i}).then(function(i){a.ajax(a.buildURL(t.typeKey,u),"PUT",{data:r}).then(function(t){var n=Ember.merge(r,t);e(n)},function(e){n("Failed to save parent in relation: "+e.response.JSON)})},function(e){n(e.responseJSON)})}else{a.ajax(a.buildURL(t.typeKey,u),"PUT",{data:r}).then(function(t){var n=Ember.merge(r,t);e(n)},function(e){n(e.responseJSON)})}})},parseClassName:function(e){if(e==="parseUser")e="_User";return Ember.String.capitalize(e)},findHasMany:function(e,t,n){if(!t.typeKey)t.typeKey=t.constructor.typeKey;var r={where:{$relatedTo:{object:{__type:"Pointer",className:this.parseClassName(t.typeKey),objectId:t.get("id")},key:n.key}}};return this.ajax(this.buildURL(n.type.typeKey),"GET",{data:r})},findQuery:function(e,t,n){if(n.where&&Ember.typeOf(n.where)!=="string"){n.where=JSON.stringify(n.where)}return this._super(e,t,n)},findMany:function(e,t,n){var r=JSON.stringify({objectId:{$in:n}});return this.ajax(this.buildURL(t.typeKey),"GET",{data:{where:r}})},sessionToken:Ember.computed("headers.X-Parse-Session-Token",function(e,t){if(arguments.length<2){return this.get("headers.X-Parse-Session-Token")}else{this.set("headers.X-Parse-Session-Token",t);return t}})});EmberParseAdapter.ParseUser=DS.Model.extend({username:DS.attr("string"),password:DS.attr("string"),email:DS.attr("string"),emailVerified:DS.attr("boolean"),sessionToken:DS.attr("string"),createdAt:DS.attr("date"),updatedAt:DS.attr("date"),name:DS.attr("string"),firstName:function(){return this.get("name").split(" ").slice(0,-1).join(" ")}.property("name"),fbid:DS.attr("string"),gender:DS.attr("string"),education:DS.attr(),course:DS.belongsTo("course",{async:true}),institution:DS.belongsTo("university",{async:true}),yearNumber:DS.attr("number"),profilePicture:DS.attr("parse-file"),profileImageURL:function(){if(this.get("profilePicture")&&this.get("profilePicture.url")){return this.get("profilePicture.url")}else if(this.get("fbid")){return"http://res.cloudinary.com/mycqs/image/facebook/c_thumb,e_improve,g_faces:center,w_150/"+this.get("fbid")}else{return"http://assets.mycqs.com/img/silhouette.png"}}.property("fbid","profilePicture"),coverImage:DS.attr("parse-file"),coverImageOffsetY:50,coverImageURL:function(){if(this.get("coverImage")&&this.get("coverImage.url")){return this.get("coverImage.url")}else if(this.get("fbid")){this.getFbCoverImage();return""}else{return"http://assets.mycqs.com/img/coffee-revise.jpg"}}.property("fbid","coverImage"),getFbCoverImage:function(){$.getJSON("http://graph.facebook.com/"+this.get("fbid")+"?fields=cover").then(function(e){if(e){var t=e.cover;if(t){if(t.offset_y)this.set("coverImageOffsetY",t.offset_y);this.set("coverImageURL",t.source)}}}.bind(this))},numberOfTests:DS.attr("number",{defaultValue:0}),numberOfQuestions:DS.attr("number",{defaultValue:0}),numberOfAttempts:DS.attr("number",{defaultValue:0}),averageScore:DS.attr("number",{defaultValue:0}),numberOfUniqueAttempts:DS.attr("number",{defaultValue:0}),uniqueAverageScore:DS.attr("number",{defaultValue:0}),communityNumberOfAttempts:DS.attr("number",{defaultValue:0}),communityAverageScore:DS.attr("number",{defaultValue:0}),facebookFriends:DS.attr(),numberFollowing:DS.attr("number",{defaultValue:0}),numberOfFollowers:DS.attr("number",{defaultValue:0}),latestAttempts:DS.hasMany("attempt",{async:true,array:true}),slug:DS.attr("string")});EmberParseAdapter.ParseUser.reopenClass({requestPasswordReset:function(e){var t=this.get("store").adapterFor(this);var n={email:e};return t.ajax(t.buildURL("requestPasswordReset"),"POST",{data:n})["catch"](function(e){return Ember.RSVP.reject(e.responseJSON)})},login:function(e,t){if(Ember.isEmpty(this.typeKey)){throw new Error("Parse login must be called on a model fetched via store.modelFor")}var n=this;var r=e.adapterFor(n);var i=e.serializerFor(n);return r.ajax(r.buildURL("login"),"GET",{data:t}).then(function(t){i.normalize(n,t);var r=e.push(n,t);return r},function(e){return Ember.RSVP.reject(e.responseJSON)})},signup:function(e,t){if(Ember.isEmpty(this.typeKey)){throw new Error("Parse signup must be called on a model fetched via store.modelFor")}var n=this;var r=e.adapterFor(n);var i=e.serializerFor(n);return r.ajax(r.buildURL("signup"),"POST",{data:t}).then(function(r){i.normalize(n,r);r.email=r.email||t.email;r.username=r.username||t.username;var s=e.push(n,r);return s},function(e){return Ember.RSVP.reject(e.responseJSON)})}});EmberParseAdapter.GeoPoint=Ember.Object.extend({latitude:Ember.computed(function(){return this._latitude}).readOnly(),longitude:Ember.computed(function(){return this._longitude}).readOnly(),init:function(e,t){this._latitude=e;this._longitude=t}});EmberParseAdapter.File=Ember.Object.extend({name:Ember.computed(function(){return this._name}).readOnly(),url:Ember.computed(function(){return this._url}).readOnly(),init:function(e,t){this._name=e;this._url=t}});EmberParseAdapter.Transforms.GeoPoint=DS.Transform.extend({deserialize:function(e){if(!e){return null}return new EmberParseAdapter.GeoPoint(e.latitude,e.longitude)},serialize:function(e){if(!e){return null}return{__type:"GeoPoint",latitude:e.get("latitude"),longitude:e.get("longitude")}}});EmberParseAdapter.Transforms.File=DS.Transform.extend({deserialize:function(e){if(!e){return null}return new EmberParseAdapter.File(e.name,e.url)},serialize:function(e){if(!e){return null}return{__type:"File",name:e.get("name"),url:e.get("url")}}});EmberParseAdapter.Transforms.Date=DS.Transform.extend({deserialize:function(e){if(!e){return null}return new Date(e.iso)},serialize:function(e){if(!e){return null}return{__type:"Date",iso:e.toISOString()}}});EmberParseAdapter.setupContainer=function(e){e.register("adapter:-parse",EmberParseAdapter.Adapter);e.register("serializer:-parse",EmberParseAdapter.Serializer);e.register("model:parse-user",EmberParseAdapter.ParseUser);e.register("transform:parse-geo-point",EmberParseAdapter.Transforms.GeoPoint);e.register("transform:parse-file",EmberParseAdapter.Transforms.File);e.register("transform:parse-date",EmberParseAdapter.Transforms.Date)};Ember.onLoad("Ember.Application",function(e){e.initializer({after:"ember-data",name:"parse-adapter",initialize:function(e,t){EmberParseAdapter.setupContainer(e)}})})