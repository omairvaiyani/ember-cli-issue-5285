<li class="navbar-messages dropdown keep-open">
    <a id="navbar-messages-dropdown" data-toggle="dropdown">
        {{#if currentUser.totalUnreadMessages}}
            <span class="badge pull-right">{{currentUser.totalUnreadMessages}}</span>
        {{/if}}
        <span class="glyphicon glyphicon-envelope"></span>
    </a>
    <ul class="dropdown-menu" id="navbar-messages-dropdown-menu" role="menu" aria-labelledby="navbar-messages-dropdown">
        {{#each item in currentUser.messages}}
            <li role="presentation" {{bind-attr class=':user-message-item item.read::is-unread'}}>
                {{partial 'application/navbar/user-messages/item/message'}}
                {{#if item.read}}
                    <div class="read-indicator" {{action 'markMessageAsUnread' item}}>
                        <span class="glyphicon glyphicon-eye-close" title='Mark as unread'></span>
                    </div>
                {{else}}
                    <div class="read-indicator" {{action 'markMessageAsRead' item}}>
                        <span class="glyphicon glyphicon-eye-open" title='Mark as read'></span>
                    </div>
                {{/if}}
            </li>
            <hr class="user-message-item-separator">
        {{/each}}
        {{#unless currentUser.messages.length}}
            <li role="presentation">
                <a disabled="disabled">You have no messages.</a>
            </li>
        {{/unless}}
    </ul>
</li>
<script>
    /*
     * This overrides bootstraps
     * dropdown menu jQuery function.
     * We want to avoid closing the
     * menu when the user clicks on
     * 'mark read' or 'mark unread'.
     */
    $('.dropdown.keep-open').on({
        "shown.bs.dropdown": function () {
            this.closable = true;
        },
        "click": function (e) {
            if (e.target.parentNode.className === "read-indicator")
                this.closable = false;
            else
                this.closable = true;
        },
        "hide.bs.dropdown": function (e) {
            var closable = this.closable;
            this.closable = true;
            return closable;
        }
    });
</script>